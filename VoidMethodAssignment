using System;

namespace VoidMethodAssignment
{
    // Main program class
    class Program
    {
        // Entry point of the application
        static void Main(string[] args)
        {
            // Display welcome message
            Console.WriteLine("Void Method with Named Parameters Demonstration");
            Console.WriteLine("==============================================");
            
            // Instantiate the MathOperations class
            MathOperations mathOps = new MathOperations();
            
            // Call the method passing two numbers in order (positional arguments)
            Console.WriteLine("\n1. Calling method with positional arguments:");
            mathOps.DisplayMathOperation(15, 7); // First number: 15, Second number: 7
            
            // Call the method specifying parameters by name (named arguments)
            Console.WriteLine("\n2. Calling method with named arguments:");
            mathOps.DisplayMathOperation(secondNumber: 12, firstNumber: 8); // Order doesn't matter when using named parameters
            
            // Another example with named parameters in different order
            Console.WriteLine("\n3. Calling method with named arguments (different order):");
            mathOps.DisplayMathOperation(firstNumber: 20, secondNumber: 5);
            
            // Demonstrate with variables
            Console.WriteLine("\n4. Calling method with variables as named arguments:");
            int num1 = 25;
            int num2 = 3;
            mathOps.DisplayMathOperation(secondNumber: num2, firstNumber: num1);
            
            // Show what happens with the same values but different parameter order
            Console.WriteLine("\n5. Demonstrating parameter order independence:");
            Console.WriteLine("Same values, different parameter order:");
            mathOps.DisplayMathOperation(firstNumber: 10, secondNumber: 4);
            mathOps.DisplayMathOperation(secondNumber: 4, firstNumber: 10);
            
            // Keep console open until user presses a key
            Console.WriteLine("\nPress any key to exit...");
            Console.ReadKey();
        }
    }

    // Class containing mathematical operations
    public class MathOperations
    {
        // Void method that takes two integer parameters
        // Performs a math operation on the first integer and displays the second integer
        public void DisplayMathOperation(int firstNumber, int secondNumber)
        {
            // Perform math operation on firstNumber (multiply by 2 in this case)
            int result = firstNumber * 2;
            
            // Display the operation performed and the result
            Console.WriteLine($"Math operation: {firstNumber} * 2 = {result}");
            
            // Display the second integer parameter
            Console.WriteLine($"Second number displayed: {secondNumber}");
            
            // Additional information showing the parameter values received
            Console.WriteLine($"Parameters received - firstNumber: {firstNumber}, secondNumber: {secondNumber}");
        }
    }
}